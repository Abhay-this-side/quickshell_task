{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHAY RAJ SINGH\\\\Desktop\\\\quickshell\\\\kanban-board\\\\src\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useBoard } from '../../context/BoardContext';\nimport { Column } from '../Column/Column';\nimport { PRIORITY_MAP } from '../../constants/priority';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const {\n    tickets,\n    users,\n    groupBy,\n    sortBy\n  } = useBoard();\n  const groupedTickets = useMemo(() => {\n    const sorted = [...tickets].sort((a, b) => {\n      if (sortBy === 'priority') {\n        return b.priority - a.priority;\n      }\n      return a.title.localeCompare(b.title);\n    });\n    if (groupBy === 'status') {\n      const groups = {\n        'Todo': [],\n        'In Progress': [],\n        'Backlog': [],\n        'Done': [],\n        'Cancelled': []\n      };\n      sorted.forEach(ticket => {\n        if (groups.hasOwnProperty(ticket.status)) {\n          groups[ticket.status].push(ticket);\n        } else {\n          groups['Backlog'].push(ticket);\n        }\n      });\n      return groups;\n    }\n    if (groupBy === 'user') {\n      const groups = {};\n      users.forEach(user => {\n        groups[user.id] = sorted.filter(ticket => ticket.userId === user.id);\n      });\n      return groups;\n    }\n    if (groupBy === 'priority') {\n      const groups = {};\n      Object.keys(PRIORITY_MAP).forEach(priority => {\n        groups[priority] = sorted.filter(ticket => ticket.priority === parseInt(priority));\n      });\n      return groups;\n    }\n    return {};\n  }, [tickets, users, groupBy, sortBy]);\n  const renderColumns = () => {\n    return Object.entries(groupedTickets).map(([group, tickets]) => /*#__PURE__*/_jsxDEV(Column, {\n      title: group,\n      tickets: tickets,\n      users: users,\n      icon: null // Add an icon if needed\n      ,\n      groupBy: groupBy // Pass the grouping method to Column\n    }, group, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: renderColumns()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"yX8/O9sfAWXapntXlNBng6GZ1wY=\", false, function () {\n  return [useBoard];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useMemo","useBoard","Column","PRIORITY_MAP","jsxDEV","_jsxDEV","Board","_s","tickets","users","groupBy","sortBy","groupedTickets","sorted","sort","a","b","priority","title","localeCompare","groups","forEach","ticket","hasOwnProperty","status","push","user","id","filter","userId","Object","keys","parseInt","renderColumns","entries","map","group","icon","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/ABHAY RAJ SINGH/Desktop/quickshell/kanban-board/src/components/Board/Board.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useBoard } from '../../context/BoardContext';\r\nimport { Column } from '../Column/Column';\r\nimport { PRIORITY_MAP } from '../../constants/priority';\r\nimport './Board.css';\r\n\r\nexport const Board = () => {\r\n  const { tickets, users, groupBy, sortBy } = useBoard();\r\n\r\n  const groupedTickets = useMemo(() => {\r\n    const sorted = [...tickets].sort((a, b) => {\r\n      if (sortBy === 'priority') {\r\n        return b.priority - a.priority;\r\n      }\r\n      return a.title.localeCompare(b.title);\r\n    });\r\n\r\n    if (groupBy === 'status') {\r\n      const groups = {\r\n        'Todo': [],\r\n        'In Progress': [],\r\n        'Backlog': [],\r\n        'Done': [],\r\n        'Cancelled': [],\r\n      };\r\n\r\n      sorted.forEach(ticket => {\r\n        if (groups.hasOwnProperty(ticket.status)) {\r\n          groups[ticket.status].push(ticket);\r\n        } else {\r\n          groups['Backlog'].push(ticket);\r\n        }\r\n      });\r\n\r\n      return groups;\r\n    }\r\n\r\n    if (groupBy === 'user') {\r\n      const groups = {};\r\n      users.forEach(user => {\r\n        groups[user.id] = sorted.filter(ticket => ticket.userId === user.id);\r\n      });\r\n      return groups;\r\n    }\r\n\r\n    if (groupBy === 'priority') {\r\n      const groups = {};\r\n      Object.keys(PRIORITY_MAP).forEach(priority => {\r\n        groups[priority] = sorted.filter(\r\n          ticket => ticket.priority === parseInt(priority)\r\n        );\r\n      });\r\n      return groups;\r\n    }\r\n\r\n    return {};\r\n  }, [tickets, users, groupBy, sortBy]);\r\n\r\n  const renderColumns = () => {\r\n    return Object.entries(groupedTickets).map(([group, tickets]) => (\r\n      <Column\r\n        key={group}\r\n        title={group}\r\n        tickets={tickets}\r\n        users={users}\r\n        icon={null} // Add an icon if needed\r\n        groupBy={groupBy} // Pass the grouping method to Column\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {renderColumns()}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
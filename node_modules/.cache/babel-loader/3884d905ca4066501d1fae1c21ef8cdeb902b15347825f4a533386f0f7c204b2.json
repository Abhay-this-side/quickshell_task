{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHAY RAJ SINGH\\\\Desktop\\\\quickshell\\\\kanban-board\\\\src\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useBoard } from '../../context/BoardContext';\nimport { Column } from '../Column/Column';\nimport { PRIORITY_MAP } from '../../constants/priority';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const {\n    tickets,\n    users,\n    groupBy,\n    sortBy\n  } = useBoard();\n  const groupedTickets = useMemo(() => {\n    const sorted = [...tickets].sort((a, b) => {\n      if (sortBy === 'priority') {\n        return b.priority - a.priority;\n      }\n      return a.title.localeCompare(b.title);\n    });\n    if (groupBy === 'status') {\n      const groups = {};\n      sorted.forEach(ticket => {\n        if (!groups[ticket.status]) {\n          groups[ticket.status] = [];\n        }\n        groups[ticket.status].push(ticket);\n      });\n      return groups;\n    }\n    if (groupBy === 'user') {\n      const groups = {};\n      users.forEach(user => {\n        groups[user.id] = sorted.filter(ticket => ticket.userId === user.id);\n      });\n      return groups;\n    }\n    if (groupBy === 'priority') {\n      const groups = {};\n      Object.keys(PRIORITY_MAP).forEach(priority => {\n        groups[priority] = sorted.filter(ticket => ticket.priority === parseInt(priority));\n      });\n      return groups;\n    }\n    return {};\n  }, [tickets, users, groupBy, sortBy]);\n  const renderColumns = () => {\n    if (groupBy === 'status') {\n      return Object.entries(groupedTickets).map(([status, tickets]) => /*#__PURE__*/_jsxDEV(Column, {\n        title: status,\n        tickets: tickets,\n        users: users\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n    }\n    if (groupBy === 'user') {\n      return users.map(user => /*#__PURE__*/_jsxDEV(Column, {\n        title: user.name,\n        tickets: groupedTickets[user.id] || [],\n        users: [user]\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    if (groupBy === 'priority') {\n      return Object.entries(PRIORITY_MAP).map(([priority, {\n        label,\n        icon\n      }]) => /*#__PURE__*/_jsxDEV(Column, {\n        title: label,\n        icon: icon,\n        tickets: groupedTickets[priority] || [],\n        users: users\n      }, priority, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: renderColumns()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"yX8/O9sfAWXapntXlNBng6GZ1wY=\", false, function () {\n  return [useBoard];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useMemo","useBoard","Column","PRIORITY_MAP","jsxDEV","_jsxDEV","Board","_s","tickets","users","groupBy","sortBy","groupedTickets","sorted","sort","a","b","priority","title","localeCompare","groups","forEach","ticket","status","push","user","id","filter","userId","Object","keys","parseInt","renderColumns","entries","map","fileName","_jsxFileName","lineNumber","columnNumber","name","label","icon","className","children","_c","$RefreshReg$"],"sources":["C:/Users/ABHAY RAJ SINGH/Desktop/quickshell/kanban-board/src/components/Board/Board.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useBoard } from '../../context/BoardContext';\r\nimport { Column } from '../Column/Column';\r\nimport { PRIORITY_MAP } from '../../constants/priority';\r\nimport './Board.css';\r\n\r\nexport const Board = () => {\r\n  const { tickets, users, groupBy, sortBy } = useBoard();\r\n\r\n  const groupedTickets = useMemo(() => {\r\n    const sorted = [...tickets].sort((a, b) => {\r\n      if (sortBy === 'priority') {\r\n        return b.priority - a.priority;\r\n      }\r\n      return a.title.localeCompare(b.title);\r\n    });\r\n\r\n    if (groupBy === 'status') {\r\n      const groups = {};\r\n      sorted.forEach(ticket => {\r\n        if (!groups[ticket.status]) {\r\n          groups[ticket.status] = [];\r\n        }\r\n        groups[ticket.status].push(ticket);\r\n      });\r\n      return groups;\r\n    }\r\n\r\n    if (groupBy === 'user') {\r\n      const groups = {};\r\n      users.forEach(user => {\r\n        groups[user.id] = sorted.filter(ticket => ticket.userId === user.id);\r\n      });\r\n      return groups;\r\n    }\r\n\r\n    if (groupBy === 'priority') {\r\n      const groups = {};\r\n      Object.keys(PRIORITY_MAP).forEach(priority => {\r\n        groups[priority] = sorted.filter(\r\n          ticket => ticket.priority === parseInt(priority)\r\n        );\r\n      });\r\n      return groups;\r\n    }\r\n\r\n    return {};\r\n  }, [tickets, users, groupBy, sortBy]);\r\n\r\n  const renderColumns = () => {\r\n    if (groupBy === 'status') {\r\n      return Object.entries(groupedTickets).map(([status, tickets]) => (\r\n        <Column\r\n          key={status}\r\n          title={status}\r\n          tickets={tickets}\r\n          users={users}\r\n        />\r\n      ));\r\n    }\r\n\r\n    if (groupBy === 'user') {\r\n      return users.map(user => (\r\n        <Column\r\n          key={user.id}\r\n          title={user.name}\r\n          tickets={groupedTickets[user.id] || []}\r\n          users={[user]}\r\n        />\r\n      ));\r\n    }\r\n\r\n    if (groupBy === 'priority') {\r\n      return Object.entries(PRIORITY_MAP).map(([priority, { label, icon }]) => (\r\n        <Column\r\n          key={priority}\r\n          title={label}\r\n          icon={icon}\r\n          tickets={groupedTickets[priority] || []}\r\n          users={users}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {renderColumns()}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}